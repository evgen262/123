// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=./repositories_mock.go -package=employees
//

// Package employees is a generated GoMock package.
package employees

import (
	reflect "reflect"

	employeev1 "git.mos.ru/buch-cloud/moscow-team-2.0/infrastructure/protolib.git/gen/infogorod/employees/employee/v1"
	entity "git.mos.ru/buch-cloud/moscow-team-2.0/backend/web-api.git/internal/entity"
	employee "git.mos.ru/buch-cloud/moscow-team-2.0/backend/web-api.git/internal/entity/employee"
	gomock "go.uber.org/mock/gomock"
)

// MockMapperEmployees is a mock of MapperEmployees interface.
type MockMapperEmployees struct {
	ctrl     *gomock.Controller
	recorder *MockMapperEmployeesMockRecorder
	isgomock struct{}
}

// MockMapperEmployeesMockRecorder is the mock recorder for MockMapperEmployees.
type MockMapperEmployeesMockRecorder struct {
	mock *MockMapperEmployees
}

// NewMockMapperEmployees creates a new mock instance.
func NewMockMapperEmployees(ctrl *gomock.Controller) *MockMapperEmployees {
	mock := &MockMapperEmployees{ctrl: ctrl}
	mock.recorder = &MockMapperEmployeesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapperEmployees) EXPECT() *MockMapperEmployeesMockRecorder {
	return m.recorder
}

// EmployeeToEntity mocks base method.
func (m *MockMapperEmployees) EmployeeToEntity(arg0 *employeev1.CompositeEmployee) *employee.Employee {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmployeeToEntity", arg0)
	ret0, _ := ret[0].(*employee.Employee)
	return ret0
}

// EmployeeToEntity indicates an expected call of EmployeeToEntity.
func (mr *MockMapperEmployeesMockRecorder) EmployeeToEntity(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmployeeToEntity", reflect.TypeOf((*MockMapperEmployees)(nil).EmployeeToEntity), arg0)
}

// GenderToEntity mocks base method.
func (m *MockMapperEmployees) GenderToEntity(gender employeev1.GenderType) entity.Gender {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenderToEntity", gender)
	ret0, _ := ret[0].(entity.Gender)
	return ret0
}

// GenderToEntity indicates an expected call of GenderToEntity.
func (mr *MockMapperEmployeesMockRecorder) GenderToEntity(gender any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenderToEntity", reflect.TypeOf((*MockMapperEmployees)(nil).GenderToEntity), gender)
}
