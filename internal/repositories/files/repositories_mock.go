// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=./repositories_mock.go -package=files
//

// Package files is a generated GoMock package.
package files

import (
	reflect "reflect"

	filev1 "git.mos.ru/buch-cloud/moscow-team-2.0/infrastructure/protolib.git/gen/infogorod/fileservice/file/v1"
	sharedv1 "git.mos.ru/buch-cloud/moscow-team-2.0/infrastructure/protolib.git/gen/infogorod/fileservice/shared/v1"
	auth "git.mos.ru/buch-cloud/moscow-team-2.0/backend/web-api.git/internal/entity/auth"
	file "git.mos.ru/buch-cloud/moscow-team-2.0/backend/web-api.git/internal/entity/file"
	gomock "go.uber.org/mock/gomock"
)

// MockFilesMapper is a mock of FilesMapper interface.
type MockFilesMapper struct {
	ctrl     *gomock.Controller
	recorder *MockFilesMapperMockRecorder
	isgomock struct{}
}

// MockFilesMapperMockRecorder is the mock recorder for MockFilesMapper.
type MockFilesMapperMockRecorder struct {
	mock *MockFilesMapper
}

// NewMockFilesMapper creates a new mock instance.
func NewMockFilesMapper(ctrl *gomock.Controller) *MockFilesMapper {
	mock := &MockFilesMapper{ctrl: ctrl}
	mock.recorder = &MockFilesMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFilesMapper) EXPECT() *MockFilesMapperMockRecorder {
	return m.recorder
}

// FilePbToEntity mocks base method.
func (m *MockFilesMapper) FilePbToEntity(f *filev1.File) *file.File {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FilePbToEntity", f)
	ret0, _ := ret[0].(*file.File)
	return ret0
}

// FilePbToEntity indicates an expected call of FilePbToEntity.
func (mr *MockFilesMapperMockRecorder) FilePbToEntity(f any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilePbToEntity", reflect.TypeOf((*MockFilesMapper)(nil).FilePbToEntity), f)
}

// MockVisitorMapper is a mock of VisitorMapper interface.
type MockVisitorMapper struct {
	ctrl     *gomock.Controller
	recorder *MockVisitorMapperMockRecorder
	isgomock struct{}
}

// MockVisitorMapperMockRecorder is the mock recorder for MockVisitorMapper.
type MockVisitorMapperMockRecorder struct {
	mock *MockVisitorMapper
}

// NewMockVisitorMapper creates a new mock instance.
func NewMockVisitorMapper(ctrl *gomock.Controller) *MockVisitorMapper {
	mock := &MockVisitorMapper{ctrl: ctrl}
	mock.recorder = &MockVisitorMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVisitorMapper) EXPECT() *MockVisitorMapperMockRecorder {
	return m.recorder
}

// SessionToVisitorPb mocks base method.
func (m *MockVisitorMapper) SessionToVisitorPb(session *auth.Session) *sharedv1.Visitor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SessionToVisitorPb", session)
	ret0, _ := ret[0].(*sharedv1.Visitor)
	return ret0
}

// SessionToVisitorPb indicates an expected call of SessionToVisitorPb.
func (mr *MockVisitorMapperMockRecorder) SessionToVisitorPb(session any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SessionToVisitorPb", reflect.TypeOf((*MockVisitorMapper)(nil).SessionToVisitorPb), session)
}
