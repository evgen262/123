syntax = "proto3";

package infogorod.auth.auth.v1;

option csharp_namespace = "Infogorod.Auth.Auth.V1";
option go_package = "infogorod/auth/auth/v1;authv1";
option java_multiple_files = true;
option java_outer_classname = "AuthApiProto";
option java_package = "com.infogorod.auth.auth.v1";
option objc_class_prefix = "IAA";
option php_namespace = "Infogorod\\Auth\\Auth\\V1";

import "infogorod/auth/auth/v1/auth.proto";
import "validate/validate.proto";

// AuthAPI сервис работы с авторизацией.
service AuthAPI {
  // GetURL
  //  URL для перенаправления пользователя для авторизации в СУДИР.
  rpc GetURL(GetURLRequest) returns (GetURLResponse);
  // Auth аутентификация пользователя или инстанса мобильного приложения
  //	метод возвращает информацию о пользователе в СУДИР.
  rpc Auth(AuthRequest) returns (AuthResponse);
  // Login вход по реквизитам.
  rpc Login(LoginRequest) returns (LoginResponse);
  // RefreshToken обновление access token в СУДИР.
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  // Logout.
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  // GetUser получение данных пользователя.
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  // GetEmployees получение данных пользователя как сотрудника.
  rpc GetEmployees(GetEmployeesRequest) returns (GetEmployeesResponse);
  // Validate валидация access token в СУДИР.
  rpc Validate(ValidateRequest) returns (ValidateResponse);
}

message GetURLRequest {
  // URL для возврата после успешной авторизации.
  string callback_url = 1;
  // Реквизиты для входа мобильного приложения.
  // Если заданы credentials - то будет использована
  // дополнительная проверка кода авторизации (https://datatracker.ietf.org/doc/html/rfc7636).
  Credentials credentials = 2;
}

message GetURLResponse {
  // URL для перенаправление в СУДИР для авторизации.
  string redirect_url = 1;
}

message AuthRequest {
  // Уникальный идентификатор сессии авторизации полученный из СУДИР.
  string state = 1;
  // Код авторизации полученный из СУДИР.
  string code = 2;
  // URL для возврата после успешной авторизации.
  string callback_url = 3;
}

message AuthResponse {
  // Пользователь.
  User user = 1;
  // Токен доступа.
  string access_token = 2;
  // Данные об устройстве пользователя.
  Device device = 3;
  // Данные об устройстве пользователя.
  message Device {
    // Идентификатор устройства.
    string id = 1;
    // Идентификатор инстанса мобильного приложения.
    string client_id = 2;
    // UserAgent мобильного устройства (заголовок X-CFC-UserAgent).
    string user_agent = 3;
  }
}

message LoginRequest {
  oneof login_by {
    // Реквизиты для входа мобильного приложения.
    Credentials credentials = 1;
  }
}

message LoginResponse {
  // Токен доступа.
  string access_token = 1;
}

message RefreshTokenRequest {
  oneof id {
    string cloud_id = 1;
    string client_id = 2;
  }
  // Идентификатор сессии СУДИР.
  string sid = 3;
}

message RefreshTokenResponse {
  // Токен доступа.
  string access_token = 1;
}

message LogoutRequest {
  oneof id {
    string cloud_id = 1;
    ClientCredentials credentials = 2;
  }
  // Идентификатор сессии СУДИР.
  string sid = 3;
  // ClientCredentials реквизиты доступа инстанса мобильного приложения.
  message ClientCredentials {
    string client_id = 1;
    string registration_access_token = 2;
  }
}

message LogoutResponse {}

message GetUserRequest {
  // Токен доступа.
  string access_token = 1;
}

message GetUserResponse {
  // Информация о пользователе.
  UserInfo user_info = 1;
}

message GetEmployeesRequest {
  // Ключ для запроса.
  oneof key {
    option (validate.required) = true;
    // Идентификатор пользователя в СУДИР.
    string cloud_id = 1 [(validate.rules).string.min_len = 1];
    // Email пользователя в СУДИР.
    string email = 2 [(validate.rules).string.email = true];
  }
}

message GetEmployeesResponse {
  // Информация о пользователе как о сотруднике.
  repeated Employee employees = 1;
}

message ValidateRequest {
  // Токен доступа.
  string access_token = 1;
}

message ValidateResponse {
  // Информация об access token.
  TokenInfo info = 1;
}
