// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: infogorod/auth/auth/v1/auth.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Разрешения СУДИР.
type Scope int32

const (
	Scope_SCOPE_INVALID   Scope = 0
	Scope_SCOPE_OPEN_ID   Scope = 1
	Scope_SCOPE_PROFILE   Scope = 2
	Scope_SCOPE_EMAIL     Scope = 3
	Scope_SCOPE_USER_INFO Scope = 4
	Scope_SCOPE_EMPLOYEE  Scope = 5
	Scope_SCOPE_GROUPS    Scope = 6
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "SCOPE_INVALID",
		1: "SCOPE_OPEN_ID",
		2: "SCOPE_PROFILE",
		3: "SCOPE_EMAIL",
		4: "SCOPE_USER_INFO",
		5: "SCOPE_EMPLOYEE",
		6: "SCOPE_GROUPS",
	}
	Scope_value = map[string]int32{
		"SCOPE_INVALID":   0,
		"SCOPE_OPEN_ID":   1,
		"SCOPE_PROFILE":   2,
		"SCOPE_EMAIL":     3,
		"SCOPE_USER_INFO": 4,
		"SCOPE_EMPLOYEE":  5,
		"SCOPE_GROUPS":    6,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_infogorod_auth_auth_v1_auth_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_infogorod_auth_auth_v1_auth_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{0}
}

// Пользователь.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор СУДИР.
	CloudId string `protobuf:"bytes,1,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
	// СНИЛС.
	Snils string `protobuf:"bytes,2,opt,name=snils,proto3" json:"snils,omitempty"`
	// Информация о пользователе.
	Info *UserInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	// Информация о сотруднике.
	Employees []*Employee `protobuf:"bytes,4,rep,name=employees,proto3" json:"employees,omitempty"`
	// Идентификатор сессии СУДИР.
	SudirSid string `protobuf:"bytes,5,opt,name=sudir_sid,json=sudirSid,proto3" json:"sudir_sid,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

func (x *User) GetSnils() string {
	if x != nil {
		return x.Snils
	}
	return ""
}

func (x *User) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *User) GetEmployees() []*Employee {
	if x != nil {
		return x.Employees
	}
	return nil
}

func (x *User) GetSudirSid() string {
	if x != nil {
		return x.SudirSid
	}
	return ""
}

// Сотрудник.
type Employee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ИНН организации.
	Inn string `protobuf:"bytes,1,opt,name=inn,proto3" json:"inn,omitempty"`
	// Идентификатор организации.
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// ФИО сотрудника.
	Fio string `protobuf:"bytes,3,opt,name=fio,proto3" json:"fio,omitempty"`
}

func (x *Employee) Reset() {
	*x = Employee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee) ProtoMessage() {}

func (x *Employee) ProtoReflect() protoreflect.Message {
	mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee.ProtoReflect.Descriptor instead.
func (*Employee) Descriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *Employee) GetInn() string {
	if x != nil {
		return x.Inn
	}
	return ""
}

func (x *Employee) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Employee) GetFio() string {
	if x != nil {
		return x.Fio
	}
	return ""
}

// Реквизиты для входа мобильного приложения.
type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор инстанса мобильного приложения.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Пароль инстанса мобильного приложения.
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *Credentials) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Credentials) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

// Информация о пользователе.
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Email пользователя.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Имя для входа.
	LogonName string `protobuf:"bytes,2,opt,name=logon_name,json=logonName,proto3" json:"logon_name,omitempty"`
	// Идентификатор в домене.
	Sub string `protobuf:"bytes,3,opt,name=sub,proto3" json:"sub,omitempty"`
	// Фамилия.
	LastName string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// Имя.
	FirstName string `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Отчество.
	MiddleName string `protobuf:"bytes,6,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// Организация из СУДИР.
	SudirCompany string `protobuf:"bytes,7,opt,name=sudir_company,json=sudirCompany,proto3" json:"sudir_company,omitempty"`
	// Подразделение из СУДИР.
	SudirDepartment string `protobuf:"bytes,8,opt,name=sudir_department,json=sudirDepartment,proto3" json:"sudir_department,omitempty"`
	// Должность из СУДИР.
	SudirPosition string `protobuf:"bytes,9,opt,name=sudir_position,json=sudirPosition,proto3" json:"sudir_position,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetLogonName() string {
	if x != nil {
		return x.LogonName
	}
	return ""
}

func (x *UserInfo) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *UserInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UserInfo) GetSudirCompany() string {
	if x != nil {
		return x.SudirCompany
	}
	return ""
}

func (x *UserInfo) GetSudirDepartment() string {
	if x != nil {
		return x.SudirDepartment
	}
	return ""
}

func (x *UserInfo) GetSudirPosition() string {
	if x != nil {
		return x.SudirPosition
	}
	return ""
}

// Информация об access token.
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Субъект, которому выдан токен.
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// Перечень разрешений токена.
	Scopes []Scope `protobuf:"varint,2,rep,packed,name=scopes,proto3,enum=infogorod.auth.auth.v1.Scope" json:"scopes,omitempty"`
	// Тип токена (Bearer, Basic, и тд).
	TokenType string `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	// Идентификатор системы (клиент СУДИР), которой был выдан токен.
	ClientId string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Время, в которое был выдан токен.
	IssuedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=issued_time,json=issuedTime,proto3" json:"issued_time,omitempty"`
	// Время, когда токен станет невалидным.
	ExpTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=exp_time,json=expTime,proto3" json:"exp_time,omitempty"`
	// Статус активности токена.
	IsActive bool `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_infogorod_auth_auth_v1_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (x *TokenInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TokenInfo) GetScopes() []Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *TokenInfo) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *TokenInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TokenInfo) GetIssuedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedTime
	}
	return nil
}

func (x *TokenInfo) GetExpTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpTime
	}
	return nil
}

func (x *TokenInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

var File_infogorod_auth_auth_v1_auth_proto protoreflect.FileDescriptor

var file_infogorod_auth_auth_v1_auth_proto_rawDesc = []byte{
	0x0a, 0x21, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6e, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6e, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x09,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x64, 0x69, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x64, 0x69, 0x72, 0x53, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x6f,
	0x22, 0x4f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0xa5, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x64, 0x69, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x64, 0x69, 0x72,
	0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x75, 0x64, 0x69, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x64, 0x69,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa9, 0x02, 0x0a, 0x09, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2a, 0x8c, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x4f,
	0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x45, 0x45,
	0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x53, 0x10, 0x06, 0x42, 0x80, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x42, 0x09, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x1d, 0x69, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x49, 0x41, 0x41, 0xaa, 0x02, 0x16, 0x49, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f,
	0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x16, 0x49, 0x6e, 0x66, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x64, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c,
	0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infogorod_auth_auth_v1_auth_proto_rawDescOnce sync.Once
	file_infogorod_auth_auth_v1_auth_proto_rawDescData = file_infogorod_auth_auth_v1_auth_proto_rawDesc
)

func file_infogorod_auth_auth_v1_auth_proto_rawDescGZIP() []byte {
	file_infogorod_auth_auth_v1_auth_proto_rawDescOnce.Do(func() {
		file_infogorod_auth_auth_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_infogorod_auth_auth_v1_auth_proto_rawDescData)
	})
	return file_infogorod_auth_auth_v1_auth_proto_rawDescData
}

var file_infogorod_auth_auth_v1_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infogorod_auth_auth_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_infogorod_auth_auth_v1_auth_proto_goTypes = []interface{}{
	(Scope)(0),                    // 0: infogorod.auth.auth.v1.Scope
	(*User)(nil),                  // 1: infogorod.auth.auth.v1.User
	(*Employee)(nil),              // 2: infogorod.auth.auth.v1.Employee
	(*Credentials)(nil),           // 3: infogorod.auth.auth.v1.Credentials
	(*UserInfo)(nil),              // 4: infogorod.auth.auth.v1.UserInfo
	(*TokenInfo)(nil),             // 5: infogorod.auth.auth.v1.TokenInfo
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_infogorod_auth_auth_v1_auth_proto_depIdxs = []int32{
	4, // 0: infogorod.auth.auth.v1.User.info:type_name -> infogorod.auth.auth.v1.UserInfo
	2, // 1: infogorod.auth.auth.v1.User.employees:type_name -> infogorod.auth.auth.v1.Employee
	0, // 2: infogorod.auth.auth.v1.TokenInfo.scopes:type_name -> infogorod.auth.auth.v1.Scope
	6, // 3: infogorod.auth.auth.v1.TokenInfo.issued_time:type_name -> google.protobuf.Timestamp
	6, // 4: infogorod.auth.auth.v1.TokenInfo.exp_time:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_infogorod_auth_auth_v1_auth_proto_init() }
func file_infogorod_auth_auth_v1_auth_proto_init() {
	if File_infogorod_auth_auth_v1_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infogorod_auth_auth_v1_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infogorod_auth_auth_v1_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infogorod_auth_auth_v1_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infogorod_auth_auth_v1_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infogorod_auth_auth_v1_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infogorod_auth_auth_v1_auth_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infogorod_auth_auth_v1_auth_proto_goTypes,
		DependencyIndexes: file_infogorod_auth_auth_v1_auth_proto_depIdxs,
		EnumInfos:         file_infogorod_auth_auth_v1_auth_proto_enumTypes,
		MessageInfos:      file_infogorod_auth_auth_v1_auth_proto_msgTypes,
	}.Build()
	File_infogorod_auth_auth_v1_auth_proto = out.File
	file_infogorod_auth_auth_v1_auth_proto_rawDesc = nil
	file_infogorod_auth_auth_v1_auth_proto_goTypes = nil
	file_infogorod_auth_auth_v1_auth_proto_depIdxs = nil
}
