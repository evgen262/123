// Code generated by DIT Nil Getters Generator. !!! DO NOT EDIT !!!
// Source: category.go
package news

import (
    "time"
    "github.com/google/uuid"
)

 
 
 
func (n *NewCategory) GetVisibilityPtr() *CategoryVisibility {
    if n == nil {
        return nil
    }
	return n.Visibility
}
 
 
 
func (u *UpdateCategory) GetUpdatedAtPtr() *time.Time {
    if u == nil {
        return nil
    }
	return u.UpdatedAt
}
 
 
func (u *UpdateCategory) GetVisibilityPtr() *CategoryVisibility {
    if u == nil {
        return nil
    }
	return u.Visibility
}
 
 
func (c *CategoryResult) GetUpdatedAtPtr() *time.Time {
    if c == nil {
        return nil
    }
	return c.UpdatedAt
}
 
 
 
 
func (c *Category) GetUpdatedAtPtr() *time.Time {
    if c == nil {
        return nil
    }
	return c.UpdatedAt
}
 
func (c *Category) GetVisibilityPtr() *CategoryVisibility {
    if c == nil {
        return nil
    }
	return c.Visibility
}
 
 
 
 
 
 
 
 
 
 
 
func (s *SearchCategoryRequest) GetLimitPtr() *int {
    if s == nil {
        return nil
    }
	return s.Limit
}
 
 
 
 
 



 
func (n *NewCategory) GetName() string {
    if n == nil {
        return ""
    }
	return n.Name
}
 
func (n *NewCategory) GetAuthorID() uuid.UUID {
    if n == nil {
        return uuid.Nil
    }
	return n.AuthorID
}
 
func (n *NewCategory) GetVisibility() (_Visibility CategoryVisibility) {
    if n == nil || n.Visibility == nil  {
        return 
    }
	return *n.Visibility
}
 
func (u *UpdateCategory) GetID() uuid.UUID {
    if u == nil {
        return uuid.Nil
    }
	return u.ID
}
 
func (u *UpdateCategory) GetName() string {
    if u == nil {
        return ""
    }
	return u.Name
}
 
func (u *UpdateCategory) GetUpdatedAt() time.Time {
    if u == nil || u.UpdatedAt == nil  {
        return time.Time{}
    }
	return *u.UpdatedAt
}
 
func (u *UpdateCategory) GetAuthorID() uuid.UUID {
    if u == nil {
        return uuid.Nil
    }
	return u.AuthorID
}
 
func (u *UpdateCategory) GetVisibility() (_Visibility CategoryVisibility) {
    if u == nil || u.Visibility == nil  {
        return 
    }
	return *u.Visibility
}
 
func (c *CategoryResult) GetID() uuid.UUID {
    if c == nil {
        return uuid.Nil
    }
	return c.ID
}
 
func (c *CategoryResult) GetUpdatedAt() time.Time {
    if c == nil || c.UpdatedAt == nil  {
        return time.Time{}
    }
	return *c.UpdatedAt
}
 
func (c *Category) GetID() uuid.UUID {
    if c == nil {
        return uuid.Nil
    }
	return c.ID
}
 
func (c *Category) GetName() string {
    if c == nil {
        return ""
    }
	return c.Name
}
 
func (c *Category) GetPortalID() int {
    if c == nil {
        return 0
    }
	return c.PortalID
}
 
func (c *Category) GetUpdatedAt() time.Time {
    if c == nil || c.UpdatedAt == nil  {
        return time.Time{}
    }
	return *c.UpdatedAt
}
 
func (c *Category) GetVisibility() (_Visibility CategoryVisibility) {
    if c == nil || c.Visibility == nil  {
        return 
    }
	return *c.Visibility
}
 
func (c *CategoryVisibility) GetCondition() string {
    if c == nil {
        return ""
    }
	return c.Condition
}
 
func (c *CategoryVisibility) GetComplexIDs() []int {
    if c == nil {
        return nil
    }
	return c.ComplexIDs
}
 
func (c *CategoryVisibility) GetOIVs() []int {
    if c == nil {
        return nil
    }
	return c.OIVs
}
 
func (c *CategoryVisibility) GetOrgIDs() []uuid.UUID {
    if c == nil {
        return nil
    }
	return c.OrgIDs
}
 
func (c *CategoryVisibility) GetProductIDs() []uuid.UUID {
    if c == nil {
        return nil
    }
	return c.ProductIDs
}
 
func (c *CategoryVisibility) GetSubdivisionNames() []string {
    if c == nil {
        return nil
    }
	return c.SubdivisionNames
}
 
func (c *CategoryVisibility) GetPositionNames() []string {
    if c == nil {
        return nil
    }
	return c.PositionNames
}
 
func (c *CategoryVisibility) GetEmployeeIDs() []uuid.UUID {
    if c == nil {
        return nil
    }
	return c.EmployeeIDs
}
 
func (c *CategoryVisibility) GetRoleNames() []string {
    if c == nil {
        return nil
    }
	return c.RoleNames
}
 
func (s *SearchCategoryRequest) GetPage() int {
    if s == nil {
        return 0
    }
	return s.Page
}
 
func (s *SearchCategoryRequest) GetLimit() int {
    if s == nil || s.Limit == nil  {
        return 0
    }
	return *s.Limit
}
 
func (s *SearchCategoryRequest) GetQuery() string {
    if s == nil {
        return ""
    }
	return s.Query
}
 
func (s *SearchCategoryResult) GetTotalCount() int {
    if s == nil {
        return 0
    }
	return s.TotalCount
}
 
func (s *SearchCategoryResult) GetCategories() []SearchCategoryResultItem {
    if s == nil {
        return nil
    }
	return s.Categories
}
 
func (s *SearchCategoryResultItem) GetID() uuid.UUID {
    if s == nil {
        return uuid.Nil
    }
	return s.ID
}
 
func (s *SearchCategoryResultItem) GetName() string {
    if s == nil {
        return ""
    }
	return s.Name
}



