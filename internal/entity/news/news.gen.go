// Code generated by DIT Nil Getters Generator. !!! DO NOT EDIT !!!
// Source: news.go
package news

import (
	"github.com/google/uuid"
	"time"
)

func (n *News) GetImageIDPtr() *uuid.UUID {
	if n == nil {
		return nil
	}
	return n.ImageID
}

func (n *News) GetOrganizationIDPtr() *uuid.UUID {
	if n == nil {
		return nil
	}
	return n.OrganizationID
}

func (n *News) GetProductIDPtr() *uuid.UUID {
	if n == nil {
		return nil
	}
	return n.ProductID
}

func (n *News) GetPublicationAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.PublicationAt
}

func (n *News) GetVisibilityPtr() *NewsVisibility {
	if n == nil {
		return nil
	}
	return n.Visibility
}

func (n *News) GetCreatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.CreatedAt
}

func (n *News) GetUpdatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.UpdatedAt
}

func (a *Author) GetIDPtr() *uuid.UUID {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *Author) GetMiddleNamePtr() *string {
	if a == nil {
		return nil
	}
	return a.MiddleName
}

func (a *Author) GetImageIDPtr() *uuid.UUID {
	if a == nil {
		return nil
	}
	return a.ImageID
}

func (n *NewsFull) GetImageIDPtr() *uuid.UUID {
	if n == nil {
		return nil
	}
	return n.ImageID
}

func (n *NewsFull) GetCategoryPtr() *Category {
	if n == nil {
		return nil
	}
	return n.Category
}

func (n *NewsFull) GetOrganizationPtr() *NewsOrganization {
	if n == nil {
		return nil
	}
	return n.Organization
}

func (n *NewsFull) GetProductPtr() *NewsProduct {
	if n == nil {
		return nil
	}
	return n.Product
}

func (n *NewsFull) GetPublicationAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.PublicationAt
}

func (n *NewsFull) GetVisibilityPtr() *NewsNamedVisibility {
	if n == nil {
		return nil
	}
	return n.Visibility
}

func (n *NewsFull) GetCreatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.CreatedAt
}

func (n *NewsFull) GetUpdatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.UpdatedAt
}

func (p *Participant) GetIDPtr() *uuid.UUID {
	if p == nil {
		return nil
	}
	return p.ID
}

func (p *Participant) GetMiddleNamePtr() *string {
	if p == nil {
		return nil
	}
	return p.MiddleName
}

func (p *Participant) GetImageIDPtr() *uuid.UUID {
	if p == nil {
		return nil
	}
	return p.ImageID
}

func (n *NewsComment) GetCreatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.CreatedAt
}

func (n *NewsComment) GetUpdatedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.UpdatedAt
}

func (n *NewsComment) GetDeletedAtPtr() *time.Time {
	if n == nil {
		return nil
	}
	return n.DeletedAt
}

func (n *News) GetImageID() uuid.UUID {
	if n == nil || n.ImageID == nil {
		return uuid.Nil
	}
	return *n.ImageID
}

func (n *News) GetOrganizationID() uuid.UUID {
	if n == nil || n.OrganizationID == nil {
		return uuid.Nil
	}
	return *n.OrganizationID
}

func (n *News) GetProductID() uuid.UUID {
	if n == nil || n.ProductID == nil {
		return uuid.Nil
	}
	return *n.ProductID
}

func (n *News) GetPublicationAt() time.Time {
	if n == nil || n.PublicationAt == nil {
		return time.Time{}
	}
	return *n.PublicationAt
}

func (n *News) GetVisibility() (_Visibility NewsVisibility) {
	if n == nil || n.Visibility == nil {
		return
	}
	return *n.Visibility
}

func (n *News) GetCreatedAt() time.Time {
	if n == nil || n.CreatedAt == nil {
		return time.Time{}
	}
	return *n.CreatedAt
}

func (n *News) GetUpdatedAt() time.Time {
	if n == nil || n.UpdatedAt == nil {
		return time.Time{}
	}
	return *n.UpdatedAt
}

func (a *Author) GetID() uuid.UUID {
	if a == nil || a.ID == nil {
		return uuid.Nil
	}
	return *a.ID
}

func (a *Author) GetMiddleName() string {
	if a == nil || a.MiddleName == nil {
		return ""
	}
	return *a.MiddleName
}

func (a *Author) GetImageID() uuid.UUID {
	if a == nil || a.ImageID == nil {
		return uuid.Nil
	}
	return *a.ImageID
}

func (n *NewsFull) GetImageID() uuid.UUID {
	if n == nil || n.ImageID == nil {
		return uuid.Nil
	}
	return *n.ImageID
}

func (n *NewsFull) GetCategory() (_Category Category) {
	if n == nil || n.Category == nil {
		return
	}
	return *n.Category
}

func (n *NewsFull) GetOrganization() (_Organization NewsOrganization) {
	if n == nil || n.Organization == nil {
		return
	}
	return *n.Organization
}

func (n *NewsFull) GetProduct() (_Product NewsProduct) {
	if n == nil || n.Product == nil {
		return
	}
	return *n.Product
}

func (n *NewsFull) GetPublicationAt() time.Time {
	if n == nil || n.PublicationAt == nil {
		return time.Time{}
	}
	return *n.PublicationAt
}

func (n *NewsFull) GetVisibility() (_Visibility NewsNamedVisibility) {
	if n == nil || n.Visibility == nil {
		return
	}
	return *n.Visibility
}

func (n *NewsFull) GetCreatedAt() time.Time {
	if n == nil || n.CreatedAt == nil {
		return time.Time{}
	}
	return *n.CreatedAt
}

func (n *NewsFull) GetUpdatedAt() time.Time {
	if n == nil || n.UpdatedAt == nil {
		return time.Time{}
	}
	return *n.UpdatedAt
}

func (p *Participant) GetID() uuid.UUID {
	if p == nil || p.ID == nil {
		return uuid.Nil
	}
	return *p.ID
}

func (p *Participant) GetMiddleName() string {
	if p == nil || p.MiddleName == nil {
		return ""
	}
	return *p.MiddleName
}

func (p *Participant) GetImageID() uuid.UUID {
	if p == nil || p.ImageID == nil {
		return uuid.Nil
	}
	return *p.ImageID
}

func (n *NewsComment) GetCreatedAt() time.Time {
	if n == nil || n.CreatedAt == nil {
		return time.Time{}
	}
	return *n.CreatedAt
}

func (n *NewsComment) GetUpdatedAt() time.Time {
	if n == nil || n.UpdatedAt == nil {
		return time.Time{}
	}
	return *n.UpdatedAt
}

func (n *NewsComment) GetDeletedAt() time.Time {
	if n == nil || n.DeletedAt == nil {
		return time.Time{}
	}
	return *n.DeletedAt
}
